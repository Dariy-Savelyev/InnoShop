<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AspNetCore.Authentication.ApiKey</name>
    </assembly>
    <members>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyDefaults">
            <summary>
            Default values used by api key authentication.
            </summary>
        </member>
        <member name="F:AspNetCore.Authentication.ApiKey.ApiKeyDefaults.AuthenticationScheme">
            <summary>
            Default value for AuthenticationScheme 
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyExtensions">
            <summary>
            Extension methods for api key authentication.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInAuthorizationHeader``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Authorization Header authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInHeaderOrQueryParams``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Header Or Query Parameters authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project.
            <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate must be set on the Events property on <paramref name="configureOptions"/>.
            </summary>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The configure options.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyExtensions.AddApiKeyInRouteValues``1(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{AspNetCore.Authentication.ApiKey.ApiKeyOptions})">
            <summary>
            Adds API Key - In Route Values authentication scheme to the project. It takes a implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/> as type parameter.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is set on the Events property on <paramref name="configureOptions"/> then it will be used instead of implementation of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider"/>.
            </summary>
            <typeparam name="TApiKeyProvider"></typeparam>
            <param name="builder"></param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">The display name.</param>
            <param name="configureOptions">The <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.</param>
            <returns>The instance of <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/></returns>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyHandlerBase">
            <summary>
            Inherited from <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1"/> for api key authentication.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyHandlerBase.Events">
            <summary>
            Get or set <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyEvents"/>.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandlerBase.CreateEventsAsync">
            <summary>
            Create an instance of <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyEvents"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandlerBase.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <inheritdoc/>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandlerBase.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Handles the un-authenticated requests. 
            Returns 401 status code in response.
            If <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.SuppressWWWAuthenticateHeader"/> is not set then,
            adds 'WWW-Authenticate' response header with KeyName as authentication scheme and 'Realm' 
            to let the client know which authentication scheme is being used by the system.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/></param>
            <returns>A Task.</returns>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions">
            <summary>
            Inherited from <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions"/> to allow extra option properties for 'ApiKey' authentication.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.KeyName">
            <summary>
            This is required property. It is the name of the header or query parameter of the API Key.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Realm">
            <summary>
            Gets or sets the realm property. It is used with WWW-Authenticate response header when challenging un-authenticated requests.
            Required to be set if SuppressWWWAuthenticateHeader is not set to true.
            <see href="https://tools.ietf.org/html/rfc7235#section-2.2"/>
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.SuppressWWWAuthenticateHeader">
            <summary>
            Default value is false.
            When set to true, it will NOT return WWW-Authenticate response header when challenging un-authenticated requests.
            When set to false, it will return WWW-Authenticate response header when challenging un-authenticated requests.
            It is normally used to disable browser prompt when doing ajax calls.
            <see href="https://tools.ietf.org/html/rfc7235#section-4.1"/>
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.Events">
            <summary>
            The object provided by the application to process events raised by the api key authentication middleware.
            The application may implement the interface fully, or it may create an instance of <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyEvents"/>
            and assign delegates only to the events it wants to process.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.ForLegacyIgnoreExtraValidatedApiKeyCheck">
            <summary>
            Default value is false. 
            If set to true, <see cref="P:AspNetCore.Authentication.ApiKey.IApiKey.Key"/> property returned from <see cref="M:AspNetCore.Authentication.ApiKey.IApiKeyProvider.ProvideAsync(System.String)"/> method is not compared with the key parsed from the request.
            This extra check did not existed in the previous version. So you if want to revert back to old version validation, please set this to true.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.ForLegacyUseKeyNameAsSchemeNameOnWWWAuthenticateHeader">
            <summary>
            Default value is false. 
            If set to true then value of <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.KeyName"/> property is used as scheme name on the WWW-Authenticate response header when challenging un-authenticated requests.
            else, the authentication scheme name (set when adding this authentication to the authentication builder) is used as scheme name on the WWW-Authenticate response header when challenging un-authenticated requests.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyOptions.IgnoreAuthenticationIfAllowAnonymous">
            <summary>
            Default value is false.
            If set to true, it checks if AllowAnonymous filter on controller action or metadata on the endpoint which, if found, it does not try to authenticate the request.
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyPostConfigureOptions">
            <summary>
            This post configure options checks whether the required option properties are set or not on <see cref="T:AspNetCore.Authentication.ApiKey.ApiKeyOptions"/>.
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyUtils">
            <summary>
            Utility class.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyUtils.BuildClaimsPrincipal(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Builds Claims Principal from the provided information. 
            If the <paramref name="claims"/> does not have claim of type <see cref="F:System.Security.Claims.ClaimTypes.NameIdentifier"/> then <paramref name="ownerName"/> will be added as claim of type <see cref="F:System.Security.Claims.ClaimTypes.NameIdentifier"/>.
            If the <paramref name="claims"/> does not have claim of type <see cref="F:System.Security.Claims.ClaimTypes.Name"/> then <paramref name="ownerName"/> will be added as claim of type <see cref="F:System.Security.Claims.ClaimTypes.Name"/>.
            </summary>
            <param name="ownerName">The owner name.</param>
            <param name="schemeName">The scheme name.</param>
            <param name="claimsIssuer">The claims issuer.</param>
            <param name="claims">The list of claims.</param>
            <returns></returns>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationFailedContext">
            <summary>
            Context used when authentication is failed.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationFailedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,AspNetCore.Authentication.ApiKey.ApiKeyOptions,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="options"></param>
            <param name="exception"></param>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationFailedContext.Exception">
            <summary>
            The Exception thrown when authenticating.
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext">
            <summary>
            Context used when authentication is succeeded.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,AspNetCore.Authentication.ApiKey.ApiKeyOptions,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Constructor.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="options"></param>
            <param name="principal"></param>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext.Principal">
            <summary>
            Get the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext.ReplacePrincipal(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Called to replace the claims principal. The supplied principal will replace the value of the 
            Principal property, which determines the identity of the authenticated request.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> to be used as the replacement.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext.RejectPrincipal">
            <summary>
            Called to reject the incoming principal. This may be done if the application has determined the
            account is no longer active, and the request should be treated as if it was anonymous.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext.AddClaim(System.Security.Claims.Claim)">
            <summary>
            Adds a claim to the current authenticated identity.
            </summary>
            <param name="claim"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Adds a list of claims to the current authenticated identity. 
            </summary>
            <param name="claims"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyEvents">
            <summary>
            ApiKey Events.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey">
            <summary>
            A delegate assigned to this property will be invoked just before validating api key. 
            </summary>
            <remarks>
            You must provide a delegate for this property for authentication to occur.
            In your delegate you should either call context.ValidationSucceeded() which will handle construction of authentication principal which will be assiged the context.Principal property and call context.Success(),
            or construct an authentication principal &amp; attach it to the context.Principal property and finally call context.Success() method.
            If only context.Principal property set without calling context.Success() method then, Success() method is automaticalled called.
            </remarks>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnAuthenticationSucceeded">
            <summary>
            A delegate assigned to this property will be invoked when the authentication succeeds. It will not be called if <see cref="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnValidateKey"/> delegate is assigned.
            It can be used for adding claims, headers, etc to the response.
            </summary>
            <remarks>
            Only use this if you know what you are doing.
            </remarks>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnAuthenticationFailed">
            <summary>
            A delegate assigned to this property will be invoked when the authentication fails.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnHandleChallenge">
            <summary>
            A delegate assigned to this property will be invoked before a challenge is sent back to the caller when handling unauthorized response.
            </summary>
            <remarks>
            Only use this if you know what you are doing and if you want to use custom implementation.
            Set the delegate to deal with 401 challenge concerns, if an authentication scheme in question
            deals an authentication interaction as part of it's request flow. (like adding a response header, or
            changing the 401 result to 302 of a login page or external sign-in location.)
            Call context.Handled() at the end so that any default logic for this challenge will be skipped.
            </remarks>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyEvents.OnHandleForbidden">
            <summary>
            A delegate assigned to this property will be invoked if Authorization fails and results in a Forbidden response.
            </summary>
            <remarks>
            Only use this if you know what you are doing and if you want to use custom implementation.
            Set the delegate to handle Forbid.
            Call context.Handled() at the end so that any default logic will be skipped.
            </remarks>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyEvents.ValidateKeyAsync(AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext)">
            <summary>
            Invoked when validating api key.
            </summary>
            <param name="context"></param>
            <returns>A Task.</returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyEvents.AuthenticationSucceededAsync(AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationSucceededContext)">
            <summary>
            Invoked when the authentication succeeds.
            </summary>
            <param name="context"></param>
            <returns>A Task.</returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyEvents.AuthenticationFailedAsync(AspNetCore.Authentication.ApiKey.ApiKeyAuthenticationFailedContext)">
            <summary>
            Invoked when the authentication fails.
            </summary>
            <param name="context"></param>
            <returns>A Task.</returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyEvents.HandleChallengeAsync(AspNetCore.Authentication.ApiKey.ApiKeyHandleChallengeContext)">
            <summary>
            Invoked before a challenge is sent back to the caller when handling unauthorized response.
            </summary>
            <remarks>
            Override this method to deal with 401 challenge concerns, if an authentication scheme in question
            deals an authentication interaction as part of it's request flow. (like adding a response header, or
            changing the 401 result to 302 of a login page or external sign-in location.)
            Call context.Handled() at the end so that any default logic for this challenge will be skipped.
            </remarks>
            <param name="context"></param>
            <returns>A Task.</returns>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyEvents.HandleForbiddenAsync(AspNetCore.Authentication.ApiKey.ApiKeyHandleForbiddenContext)">
            <summary>
            Invoked if Authorization fails and results in a Forbidden response.
            </summary>
            <remarks>
            Override this method to handle Forbid.
            Call context.Handled() at the end so that any default logic will be skipped.
            </remarks>
            <param name="context"></param>
            <returns>A Task.</returns>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyHandleChallengeContext">
            <summary>
            Context used when challenging unauthorized response.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandleChallengeContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,AspNetCore.Authentication.ApiKey.ApiKeyOptions,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Constructor.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="options"></param>
            <param name="properties"></param>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyHandleChallengeContext.IsHandled">
            <summary>
            Gets IsHandled property. 
            True means response is handled and any default logic for this challenge will be skipped.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandleChallengeContext.Handled">
            <summary>
            Marks as response handled and any default logic for this challenge will be skipped.
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyHandleForbiddenContext">
            <summary>
            Context used when handling forbidden response.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandleForbiddenContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,AspNetCore.Authentication.ApiKey.ApiKeyOptions,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Constructor.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="options"></param>
            <param name="properties"></param>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyHandleForbiddenContext.IsHandled">
            <summary>
            Gets IsHandled property. 
            True means response is handled and any default logic will be skipped.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyHandleForbiddenContext.Handled">
            <summary>
            Marks as response handled and any default logic will be skipped.
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext">
            <summary>
            Context used for validating key.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,AspNetCore.Authentication.ApiKey.ApiKeyOptions,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="options"></param>
            <param name="apiKey"></param>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext.ApiKey">
            <summary>
            Gets the Api Key.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext.ValidationSucceeded(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Calling this method will handle construction of authentication principal (<see cref="T:System.Security.Claims.ClaimsPrincipal" />) 
            which will be assiged to the <see cref="P:Microsoft.AspNetCore.Authentication.ResultContext`1.Principal"/> property 
            and <see cref="M:Microsoft.AspNetCore.Authentication.ResultContext`1.Success"/> method will also be called.
            </summary>
            <param name="claims">Claims to be added to the identity.</param>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext.ValidationSucceeded(System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            Calling this method will handle construction of authentication principal (<see cref="T:System.Security.Claims.ClaimsPrincipal" />) 
            which will be assiged to the <see cref="P:Microsoft.AspNetCore.Authentication.ResultContext`1.Principal"/> property 
            and <see cref="M:Microsoft.AspNetCore.Authentication.ResultContext`1.Success"/> method will also be called.
            </summary>
            <param name="ownerName">The owner name to be added to claims as <see cref="F:System.Security.Claims.ClaimTypes.Name"/> and <see cref="F:System.Security.Claims.ClaimTypes.NameIdentifier"/> if not already added with <paramref name="claims"/>.</param>
            <param name="claims">Claims to be added to the identity.</param>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext.ValidationFailed(System.String)">
            <summary>
            If parameter <paramref name="failureMessage"/> passed is empty or null then NoResult() method is called 
            otherwise, <see cref="M:Microsoft.AspNetCore.Authentication.ResultContext`1.Fail(System.String)"/> method will be called.
            </summary>
            <param name="failureMessage">(Optional) The failure message.</param>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.ApiKeyValidateKeyContext.ValidationFailed(System.Exception)">
            <summary>
            Calling this method is same as calling <see cref="M:Microsoft.AspNetCore.Authentication.ResultContext`1.Fail(System.Exception)"/> method.
            </summary>
            <param name="failureException">The failure exception.</param>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.IApiKey">
            <summary>
            API Key Details
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.IApiKey.Key">
            <summary>
            API Key
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.IApiKey.OwnerName">
            <summary>
            Owner of the API Key. It can be username or any other key owner name.
            </summary>
        </member>
        <member name="P:AspNetCore.Authentication.ApiKey.IApiKey.Claims">
            <summary>
            Optional list of claims to be sent back with the authentication request.
            </summary>
        </member>
        <member name="T:AspNetCore.Authentication.ApiKey.IApiKeyProvider">
            <summary>
            Implementation of this interface will be used by the 'ApiKey' authentication handler to validated and get details from the key.
            </summary>
        </member>
        <member name="M:AspNetCore.Authentication.ApiKey.IApiKeyProvider.ProvideAsync(System.String)">
            <summary>
            Validates the key and provides with and instance of <see cref="T:AspNetCore.Authentication.ApiKey.IApiKey"/>.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
    </members>
</doc>
